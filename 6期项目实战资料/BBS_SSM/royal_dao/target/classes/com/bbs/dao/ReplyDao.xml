<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bbs.dao.ReplyDao" >
  <resultMap id="BaseResultMap" type="com.bbs.domain.Reply" >
    <id column="replyId" property="replyid" jdbcType="INTEGER" />
    <result column="replyContent" property="replycontent" jdbcType="VARCHAR" />
    <result column="replyTime" property="replytime" jdbcType="TIMESTAMP" />
    <result column="replyUserName" property="replyusername" jdbcType="VARCHAR" />
    <result column="commentId" property="commentid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    replyId, replyContent, replyTime, replyUserName, commentId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bbs.domain.ReplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bbs_reply_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bbs_reply_table
    where replyId = #{replyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bbs_reply_table
    where replyId = #{replyid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bbs.domain.ReplyExample" >
    delete from bbs_reply_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bbs.domain.Reply" >
    insert into bbs_reply_table (replyId, replyContent, replyTime, 
      replyUserName, commentId)
    values (#{replyid,jdbcType=INTEGER}, #{replycontent,jdbcType=VARCHAR}, #{replytime,jdbcType=TIMESTAMP}, 
      #{replyusername,jdbcType=VARCHAR}, #{commentid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bbs.domain.Reply" >
    insert into bbs_reply_table
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="replyid != null" >
        replyId,
      </if>
      <if test="replycontent != null" >
        replyContent,
      </if>
      <if test="replytime != null" >
        replyTime,
      </if>
      <if test="replyusername != null" >
        replyUserName,
      </if>
      <if test="commentid != null" >
        commentId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="replyid != null" >
        #{replyid,jdbcType=INTEGER},
      </if>
      <if test="replycontent != null" >
        #{replycontent,jdbcType=VARCHAR},
      </if>
      <if test="replytime != null" >
        #{replytime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyusername != null" >
        #{replyusername,jdbcType=VARCHAR},
      </if>
      <if test="commentid != null" >
        #{commentid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bbs.domain.ReplyExample" resultType="java.lang.Integer" >
    select count(*) from bbs_reply_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bbs_reply_table
    <set >
      <if test="record.replyid != null" >
        replyId = #{record.replyid,jdbcType=INTEGER},
      </if>
      <if test="record.replycontent != null" >
        replyContent = #{record.replycontent,jdbcType=VARCHAR},
      </if>
      <if test="record.replytime != null" >
        replyTime = #{record.replytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.replyusername != null" >
        replyUserName = #{record.replyusername,jdbcType=VARCHAR},
      </if>
      <if test="record.commentid != null" >
        commentId = #{record.commentid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bbs_reply_table
    set replyId = #{record.replyid,jdbcType=INTEGER},
      replyContent = #{record.replycontent,jdbcType=VARCHAR},
      replyTime = #{record.replytime,jdbcType=TIMESTAMP},
      replyUserName = #{record.replyusername,jdbcType=VARCHAR},
      commentId = #{record.commentid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbs.domain.Reply" >
    update bbs_reply_table
    <set >
      <if test="replycontent != null" >
        replyContent = #{replycontent,jdbcType=VARCHAR},
      </if>
      <if test="replytime != null" >
        replyTime = #{replytime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyusername != null" >
        replyUserName = #{replyusername,jdbcType=VARCHAR},
      </if>
      <if test="commentid != null" >
        commentId = #{commentid,jdbcType=INTEGER},
      </if>
    </set>
    where replyId = #{replyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbs.domain.Reply" >
    update bbs_reply_table
    set replyContent = #{replycontent,jdbcType=VARCHAR},
      replyTime = #{replytime,jdbcType=TIMESTAMP},
      replyUserName = #{replyusername,jdbcType=VARCHAR},
      commentId = #{commentid,jdbcType=INTEGER}
    where replyId = #{replyid,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultMap="BaseResultMap" parameterType="Integer">
    select * from bbs_reply_table where commentId = #{commentid} order by replyTime asc;
  </select>
</mapper>